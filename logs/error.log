{"timestamp": "2025-07-11T16:55:07.023657", "level": "ERROR", "logger": "__main__", "message": "❌ 文档导入失败", "module": "ingest_documents", "function": "main", "line": 165}
{"timestamp": "2025-07-11T16:55:26.375308", "level": "ERROR", "logger": "__main__", "message": "❌ 文档导入失败", "module": "ingest_documents", "function": "main", "line": 165}
{"timestamp": "2025-07-11T16:56:07.329310", "level": "ERROR", "logger": "__main__", "message": "LightRAG初始化失败", "module": "ingest_documents", "function": "main", "line": 140}
{"timestamp": "2025-07-11T17:06:17.550446", "level": "ERROR", "logger": "__main__", "message": "LightRAG初始化失败", "module": "ingest_documents", "function": "main", "line": 140}
{"timestamp": "2025-07-15T14:48:06.149698", "level": "ERROR", "logger": "asyncio", "message": "Task was destroyed but it is pending!\ntask: <Task cancelling name='Task-116' coro=<IntelligentQAWorkflow.query_async() done, defined at /home/low_ater/SearchForRAG/intelligent-qa-system/src/core/enhanced_workflow.py:234> wait_for=<Task cancelling name='Task-120' coro=<RunnableCallable.ainvoke() running at /home/low_ater/miniconda3/envs/SearchForRAG/lib/python3.11/site-packages/langgraph/utils/runnable.py:440> wait_for=<Future cancelled> cb=[Task.task_wakeup(), gather.<locals>._done_callback() at /home/low_ater/miniconda3/envs/SearchForRAG/lib/python3.11/asyncio/tasks.py:764]> cb=[gather.<locals>._done_callback() at /home/low_ater/miniconda3/envs/SearchForRAG/lib/python3.11/asyncio/tasks.py:764]>", "module": "base_events", "function": "default_exception_handler", "line": 1785}
{"timestamp": "2025-07-15T14:48:06.161146", "level": "ERROR", "logger": "asyncio", "message": "Task was destroyed but it is pending!\ntask: <Task cancelling name='Task-120' coro=<RunnableCallable.ainvoke() running at /home/low_ater/miniconda3/envs/SearchForRAG/lib/python3.11/site-packages/langgraph/utils/runnable.py:440> wait_for=<Future cancelled> cb=[Task.task_wakeup(), gather.<locals>._done_callback() at /home/low_ater/miniconda3/envs/SearchForRAG/lib/python3.11/asyncio/tasks.py:764]>", "module": "base_events", "function": "default_exception_handler", "line": 1785}
